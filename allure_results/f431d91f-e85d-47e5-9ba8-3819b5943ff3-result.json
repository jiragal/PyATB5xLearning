{"name": "demo.us.espocrm.com positive espocrm case", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@id='btn-login']\"}\n  (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF73B6680D5+2992373]\n\t(No symbol) [0x00007FF73B2FBFD0]\n\t(No symbol) [0x00007FF73B19590A]\n\t(No symbol) [0x00007FF73B1E926E]\n\t(No symbol) [0x00007FF73B1E955C]\n\t(No symbol) [0x00007FF73B2327D7]\n\t(No symbol) [0x00007FF73B20F3AF]\n\t(No symbol) [0x00007FF73B22F584]\n\t(No symbol) [0x00007FF73B20F113]\n\t(No symbol) [0x00007FF73B1DA918]\n\t(No symbol) [0x00007FF73B1DBA81]\n\tGetHandleVerifier [0x00007FF73B6C6A2D+3379789]\n\tGetHandleVerifier [0x00007FF73B6DC32D+3468109]\n\tGetHandleVerifier [0x00007FF73B6D0043+3418211]\n\tGetHandleVerifier [0x00007FF73B45C78B+847787]\n\t(No symbol) [0x00007FF73B30757F]\n\t(No symbol) [0x00007FF73B302FC4]\n\t(No symbol) [0x00007FF73B30315D]\n\t(No symbol) [0x00007FF73B2F2979]\n\tBaseThreadInitThunk [0x00007FFD18DD259D+29]\n\tRtlUserThreadStart [0x00007FFD1A80AF38+40]", "trace": "self = <Jan_2025_Selenium.test_selenium_0014_us_espocrm.TestClass object at 0x0000020B87E71950>\n\n    @allure.title(\"demo.us.espocrm.com positive espocrm case\")\n    @allure.description(\"Test to verify user is able to Login to the demo.us.espocrm.com\")\n    @pytest.mark.negativetest\n    def test_login_espocrm(self):\n        chrome_options = Options()\n        url = \"https://demo.us.espocrm.com/\"\n        chrome_options.add_argument(\"--incognito\")\n        chrome_options.add_argument(\"__start-maximized\")\n        driver = webdriver.Chrome(options=chrome_options)\n        driver.get(url)\n>       click_button = driver.find_element(By.XPATH, \"//button[@id='btn-login']\")\n\nJan_2025_Selenium\\test_selenium_0014_us_espocrm.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020B8862C050>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF73B2F2979]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD18DD259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFD1A80AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@id='btn-login']\"}\nE         (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF73B6680D5+2992373]\nE       \t(No symbol) [0x00007FF73B2FBFD0]\nE       \t(No symbol) [0x00007FF73B19590A]\nE       \t(No symbol) [0x00007FF73B1E926E]\nE       \t(No symbol) [0x00007FF73B1E955C]\nE       \t(No symbol) [0x00007FF73B2327D7]\nE       \t(No symbol) [0x00007FF73B20F3AF]\nE       \t(No symbol) [0x00007FF73B22F584]\nE       \t(No symbol) [0x00007FF73B20F113]\nE       \t(No symbol) [0x00007FF73B1DA918]\nE       \t(No symbol) [0x00007FF73B1DBA81]\nE       \tGetHandleVerifier [0x00007FF73B6C6A2D+3379789]\nE       \tGetHandleVerifier [0x00007FF73B6DC32D+3468109]\nE       \tGetHandleVerifier [0x00007FF73B6D0043+3418211]\nE       \tGetHandleVerifier [0x00007FF73B45C78B+847787]\nE       \t(No symbol) [0x00007FF73B30757F]\nE       \t(No symbol) [0x00007FF73B302FC4]\nE       \t(No symbol) [0x00007FF73B30315D]\nE       \t(No symbol) [0x00007FF73B2F2979]\nE       \tBaseThreadInitThunk [0x00007FFD18DD259D+29]\nE       \tRtlUserThreadStart [0x00007FFD1A80AF38+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "Test to verify user is able to Login to the demo.us.espocrm.com", "start": 1737123661485, "stop": 1737123699124, "uuid": "e5dce75e-2b8f-40ae-a000-248f20bc9243", "historyId": "b60f620255dfe2683824173dd0b4ca01", "testCaseId": "b60f620255dfe2683824173dd0b4ca01", "fullName": "Jan_2025_Selenium.test_selenium_0014_us_espocrm.TestClass#test_login_espocrm", "labels": [{"name": "tag", "value": "negativetest"}, {"name": "parentSuite", "value": "Jan_2025_Selenium"}, {"name": "suite", "value": "test_selenium_0014_us_espocrm"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "DESKTOP-6BOTEB9"}, {"name": "thread", "value": "24000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Jan_2025_Selenium.test_selenium_0014_us_espocrm"}]}